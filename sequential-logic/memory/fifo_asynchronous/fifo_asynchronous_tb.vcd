$date
	Sun May 21 18:00:22 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module FIFO_ASYNCHRONOUS_TB $end
$var wire 1 ! FULL $end
$var wire 1 " EMPTY $end
$var wire 8 # DATA_OUT [7:0] $end
$var parameter 32 $ RCLKPERIOD $end
$var parameter 32 % WCLKPERIOD $end
$var reg 8 & DATA_IN [7:0] $end
$var reg 8 ' DATA_OUTEXP [7:0] $end
$var reg 1 ( EMPTYEXP $end
$var reg 1 ) FULLEXP $end
$var reg 1 * POP $end
$var reg 256 + POPCOMMENT [255:0] $end
$var reg 32 , POPERRORS [31:0] $end
$var reg 32 - POPVECTORCOUNT [31:0] $end
$var reg 1 . PUSH $end
$var reg 256 / PUSHCOMMENT [255:0] $end
$var reg 32 0 PUSHERRORS [31:0] $end
$var reg 32 1 PUSHVECTORCOUNT [31:0] $end
$var reg 1 2 RCLK $end
$var reg 1 3 RRST $end
$var reg 1 4 WCLK $end
$var reg 1 5 WRST $end
$var integer 32 6 POPCOUNT [31:0] $end
$var integer 32 7 POPEND [31:0] $end
$var integer 32 8 POPFD [31:0] $end
$var integer 32 9 PUSHCOUNT [31:0] $end
$var integer 32 : PUSHEND [31:0] $end
$var integer 32 ; PUSHFD [31:0] $end
$scope module UUT_fifo_asynchronous_structural $end
$var wire 8 < data_in [7:0] $end
$var wire 1 * pop $end
$var wire 1 . push $end
$var wire 1 2 rclk $end
$var wire 1 3 rrst $end
$var wire 1 4 wclk $end
$var wire 1 5 wrst $end
$var wire 4 = w_ptr [3:0] $end
$var wire 1 > w_next $end
$var wire 4 ? r_ptr [3:0] $end
$var wire 1 @ r_next $end
$var wire 1 ! full $end
$var wire 1 " empty $end
$var wire 8 A data_out [7:0] $end
$var parameter 1 B zero $end
$var parameter 8 C zeros $end
$scope module compare_and_status_logic $end
$var wire 4 D w_ptr [3:0] $end
$var wire 4 E r_ptr [3:0] $end
$var parameter 4 F depth $end
$var reg 1 " empty $end
$var reg 1 ! full $end
$var reg 4 G ptr_diff [3:0] $end
$upscope $end
$scope module dual_port_ram_asynchronous $end
$var wire 1 4 clk_A $end
$var wire 1 2 clk_B $end
$var wire 8 H data_in_A [7:0] $end
$var wire 8 I data_in_B [7:0] $end
$var wire 1 . we_A $end
$var wire 1 J we_B $end
$var wire 4 K addr_B [3:0] $end
$var wire 4 L addr_A [3:0] $end
$var parameter 32 M ADDR_WIDTH $end
$var parameter 32 N DATA_WIDTH $end
$var parameter 32 O MEM_DEPTH $end
$var reg 8 P data_out_A [7:0] $end
$var reg 8 Q data_out_B [7:0] $end
$upscope $end
$scope module read_logic $end
$var wire 1 " empty $end
$var wire 1 * re $end
$var reg 1 @ r_next $end
$upscope $end
$scope module read_ptr $end
$var wire 1 2 clk $end
$var wire 1 @ r_next $end
$var wire 1 3 rst $end
$var reg 4 R r_ptr [3:0] $end
$upscope $end
$scope module write_logic $end
$var wire 1 ! full $end
$var wire 1 . we $end
$var reg 1 > w_next $end
$upscope $end
$scope module write_ptr $end
$var wire 1 4 clk $end
$var wire 1 5 rst $end
$var wire 1 > w_next $end
$var reg 4 S w_ptr [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 O
b1000 N
b100 M
b1111 F
b0 C
0B
b10100 %
b10010 $
$end
#0
$dumpvars
bx S
bx R
bx Q
bx P
bx L
bx K
0J
b0 I
bx H
bx G
bx E
bx D
bx A
0@
bx ?
0>
bx =
bx <
b10000000000000000000000000000011 ;
b0 :
b101 9
b10000000000000000000000000000100 8
b0 7
b101 6
05
04
03
02
b1 1
b0 0
b1001001010011100100100101010100 /
0.
b1 -
b0 ,
b1001001010011100100100101010100 +
0*
x)
x(
bx '
bx &
bx #
x"
x!
$end
#90
12
#100
14
#180
02
#200
04
#230
b10 -
1(
13
b1010010010100100101001101010100 +
#250
b10 1
0)
15
b1010111010100100101001101010100 /
#270
b0 ?
b0 E
b0 K
b0 R
12
#300
1"
0!
b0 G
b0 =
b0 D
b0 L
b0 S
14
#360
02
#400
04
#410
b11 -
03
b101101 +
#450
1>
b11 1
b1111 &
b1111 <
b1111 H
1.
05
b10100000101010101010011010010000010110100110001 /
12
#500
0"
b10 G
b1111 P
b1 =
b1 D
b1 L
b1 S
14
#540
02
#590
b100 -
b1111 '
0(
#600
04
#630
b1111 #
b1111 A
b1111 Q
12
#650
b100 1
b11110000 &
b11110000 <
b11110000 H
b10100000101010101010011010010000010110100110010 /
#700
b11 G
b10 =
b10 D
b10 L
b10 S
b11110000 P
14
#720
02
#770
b101 -
#800
04
#810
12
#850
b101 1
b10101010 &
b10101010 <
b10101010 H
b10100000101010101010011010010000010110100110011 /
#900
b100 G
b10101010 P
b11 =
b11 D
b11 L
b11 S
02
14
#950
1@
b110 -
1*
b1010000010011110101000000110001 +
#990
b11 G
b1 ?
b1 E
b1 K
b1 R
12
#1000
04
#1050
b110 1
b11111111 &
b11111111 <
b11111111 H
b10100000101010101010011010010000010110100110100 /
#1080
02
#1100
b100 G
b100 =
b100 D
b100 L
b100 S
b11111111 P
14
#1130
b111 -
b11110000 '
b101000001001111010100000010110100110010 +
#1170
b11 G
b11110000 #
b11110000 A
b11110000 Q
b10 ?
b10 E
b10 K
b10 R
12
#1200
04
#1250
0>
b111 1
bx &
bx <
bx H
0.
b101101 /
#1260
02
#1300
bx P
14
#1310
b1000 -
b10101010 '
b101000001001111010100000010110100110011 +
#1350
b10 G
b11 ?
b11 E
b11 K
b11 R
b10101010 #
b10101010 A
b10101010 Q
12
#1400
04
#1440
02
#1450
b1000 1
#1490
b1001 -
b11111111 '
1(
b101000001001111010100000010110100110100 +
#1500
14
#1530
0@
1"
b0 G
b11111111 #
b11111111 A
b11111111 Q
b100 ?
b100 E
b100 K
b100 R
12
#1600
04
#1620
02
#1650
1>
b1001 1
b1010101 &
b1010101 <
b1010101 H
1.
b10100000101010101010011010010000010110100110101 /
#1670
b1010 -
b1010101 '
b101000001001111010100000010110100110101 +
#1700
1@
0"
b10 G
b1010101 P
b101 =
b101 D
b101 L
b101 S
14
#1710
0@
1"
b0 G
b101 ?
b101 E
b101 K
b101 R
b1010101 #
b1010101 A
b1010101 Q
12
#1800
02
04
#1850
0>
b1011 -
bx '
0*
b101101 +
b1010 1
bx &
bx <
bx H
0.
b101101 /
#1890
bx #
bx A
bx Q
12
#1900
bx P
14
#1980
02
#2000
04
#2030
b1100 -
#2050
b1011 1
#2070
12
#2100
14
#2160
02
#2200
04
#2210
b1101 -
#2250
b1100 1
12
#2300
14
#2340
02
#2390
b1110 -
#2400
04
#2430
12
#2450
b1101 1
#2500
14
#2520
02
#2570
b1111 -
#2600
04
#2610
12
#2650
1>
b1110 1
b10001111 &
b10001111 <
b10001111 H
1.
b10100000101010101010011010010000010110100110110 /
#2700
0"
b10 G
b110 =
b110 D
b110 L
b110 S
b10001111 P
02
14
#2750
b10000 -
b10001111 '
0(
#2790
b10001111 #
b10001111 A
b10001111 Q
12
#2800
04
#2850
b1111 1
b1110 &
b1110 <
b1110 H
b10100000101010101010011010010000010110100110111 /
#2880
02
#2900
b11 G
b1110 P
b111 =
b111 D
b111 L
b111 S
14
#2930
1@
b10001 -
1*
b101000001001111010100000010110100110110 +
#2970
b10 G
b110 ?
b110 E
b110 K
b110 R
12
#3000
04
#3050
b10000 1
b110011 &
b110011 <
b110011 H
b10100000101010101010011010010000010110100111000 /
#3060
02
#3100
b11 G
b1000 =
b1000 D
b1000 L
b1000 S
b110011 P
14
#3110
0@
b10010 -
b1110 '
0*
b101101 +
#3150
b1110 #
b1110 A
b1110 Q
12
#3200
04
#3240
02
#3250
b10001 1
b1111100 &
b1111100 <
b1111100 H
b10100000101010101010011010010000010110100111001 /
#3290
b10011 -
#3300
b100 G
b1111100 P
b1001 =
b1001 D
b1001 L
b1001 S
14
#3330
12
#3400
04
#3420
02
#3450
b10010 1
b1010101 &
b1010101 <
b1010101 H
b1010000010101010101001101001000001011010011000100110000 /
#3470
b10100 -
#3500
b101 G
b1010 =
b1010 D
b1010 L
b1010 S
b1010101 P
14
#3510
12
#3600
02
04
#3650
b10101 -
b10011 1
b1010000010101010101001101001000001011010011000100110001 /
#3690
12
#3700
b110 G
b1011 =
b1011 D
b1011 L
b1011 S
14
#3780
02
#3800
04
#3830
b10110 -
#3850
b10100 1
b1010000010101010101001101001000001011010011000100110010 /
#3870
12
#3900
b111 G
b1100 =
b1100 D
b1100 L
b1100 S
14
#3960
02
#4000
04
#4010
b10111 -
#4050
b10101 1
b1010000010101010101001101001000001011010011000100110011 /
12
#4100
b1000 G
b1101 =
b1101 D
b1101 L
b1101 S
14
#4140
02
#4190
b11000 -
#4200
04
#4230
12
#4250
b10110 1
b1010000010101010101001101001000001011010011000100110100 /
#4300
b1001 G
b1110 =
b1110 D
b1110 L
b1110 S
14
#4320
02
#4370
b11001 -
#4400
04
#4410
12
#4450
b10111 1
b1010000010101010101001101001000001011010011000100110101 /
#4500
b1010 G
b1111 =
b1111 D
b1111 L
b1111 S
02
14
#4550
b11010 -
#4590
12
#4600
04
#4650
b11000 1
b1010000010101010101001101001000001011010011000100110110 /
#4680
02
#4700
b0 =
b0 D
b0 L
b0 S
14
#4730
b11011 -
#4770
12
#4800
04
#4850
b11001 1
b1010000010101010101001101001000001011010011000100110111 /
#4860
02
#4900
b1011 G
b1 =
b1 D
b1 L
b1 S
14
#4910
b11100 -
#4950
12
#5000
04
#5040
02
#5050
b11010 1
b1010000010101010101001101001000001011010011000100111000 /
#5090
b11101 -
#5100
b1100 G
b10 =
b10 D
b10 L
b10 S
14
#5130
12
#5200
04
#5220
02
#5250
b11011 1
b1010000010101010101001101001000001011010011000100111001 /
#5270
b11110 -
#5300
b1101 G
b11 =
b11 D
b11 L
b11 S
14
#5310
12
#5400
02
04
#5450
b11111 -
b11100 1
b1010000010101010101001101001000001011010011001000110000 /
#5490
12
#5500
b1110 G
b100 =
b100 D
b100 L
b100 S
14
#5580
02
#5600
04
#5630
1@
b100000 -
1*
b101000001001111010100000010110100110111 +
#5650
b11101 1
b1010000010101010101001101001000001011010011001000110001 /
#5670
b1101 G
b111 ?
b111 E
b111 K
b111 R
12
#5700
b1110 G
b101 =
b101 D
b101 L
b101 S
14
#5760
02
#5800
04
#5810
b100001 -
b110011 '
b101000001001111010100000010110100111000 +
#5850
b1101 G
b110011 #
b110011 A
b110011 Q
b1000 ?
b1000 E
b1000 K
b1000 R
b11110 1
b1010000010101010101001101001000001011010011001000110010 /
12
#5900
b1110 G
b110 =
b110 D
b110 L
b110 S
14
#5940
02
#5990
b100010 -
b1111100 '
b101000001001111010100000010110100111001 +
#6000
04
#6030
b1101 G
b1001 ?
b1001 E
b1001 K
b1001 R
b1111100 #
b1111100 A
b1111100 Q
12
#6050
b11111 1
b1010000010101010101001101001000001011010011001000110011 /
#6100
b1110 G
b111 =
b111 D
b111 L
b111 S
14
#6120
02
#6170
b100011 -
b1010101 '
b10100000100111101010000001011010011000100110000 +
#6200
04
#6210
b1101 G
b1010101 #
b1010101 A
b1010101 Q
b1010 ?
b1010 E
b1010 K
b1010 R
12
#6250
0>
b100000 1
bx &
bx <
bx H
0.
b101101 /
#6300
b110011 P
02
14
#6350
0@
b100100 -
0*
b101101 +
#6390
12
#6400
04
#6450
b100001 1
#6480
02
#6500
14
#6530
b100101 -
#6570
12
#6600
04
#6650
b100010 1
#6660
02
#6700
14
#6710
b1 7
b11111111111111111111111111111111 6
#6750
12
#6800
04
#6840
02
#6850
b100011 1
#6900
14
#6930
12
#7000
04
#7020
02
#7050
b100100 1
#7100
14
#7110
12
#7200
02
04
#7250
b100101 1
#7290
12
#7300
14
#7380
02
#7400
04
#7450
b1 :
b11111111111111111111111111111111 9
